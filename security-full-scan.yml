name: Full Security Scan (Trivy + ClamAV + YARA)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  Security-full-scan:
    runs-on: ubuntu-latest

    steps:
      - name: üì¶ Checkout source
        uses: actions/checkout@v4

      ##################################################
      # 1Ô∏è‚É£ Trivy ‚Äì Qu√©t secrets v√† m√£ ƒë·ªôc c∆° b·∫£n
      ##################################################
      - name: üõ°Ô∏è Install Trivy
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin

      - name: üîç Trivy Secret Scan (Table format)
        run: |
          echo "üîê Trivy Secret Scan Result" > trivy_output.log
          trivy fs . \
            --scanners secret \
            --exit-code 0 \
            --format table | tee -a trivy_output.log

      ##################################################
      # 2Ô∏è‚É£ ClamAV ‚Äì Qu√©t virus, trojan, worm
      ##################################################
      - name: ü¶† Install ClamAV
        run: |
          sudo apt-get update
          sudo apt-get install -y clamav clamav-daemon

      - name: üîÑ Update ClamAV DB
        run: |
          sudo systemctl stop clamav-freshclam || true
          sudo systemctl stop clamav-daemon || true
          sudo freshclam

      - name: üß™ Run ClamAV Scan
        run: |
          echo "ü¶† ClamAV Scan Result" > clamav_output.log
          clamscan -r --infected --no-summary . | tee -a clamav_output.log || true

      ##################################################
      # 3Ô∏è‚É£ YARA ‚Äì Pattern nh·∫≠n di·ªán malware tinh vi
      ##################################################
      - name: üîß Install YARA
        run: |
          sudo apt-get install -y yara git

      - name: üåê Clone YARA-Rules full repo
        run: |
          git clone https://github.com/Yara-Rules/rules.git yara_rules

      - name: üß¨ Run YARA on all rules (with tagged report)
        run: |
          echo "üß¨ YARA Scan Result" > yara_output.log
          find yara_rules -type f \( -name "*.yar" -o -name "*.yara" \) | while read rule; do
            echo "üîé Scanning with rule: $rule" | tee -a yara_output.log
            yara -r "$rule" . 2>> yara_output.log | tee -a yara_output.log || true
          done

      ##################################################
      # 5Ô∏è‚É£ T·ªïng h·ª£p k·∫øt qu·∫£ (summary.log)
      ##################################################
      - name: üìù Generate Summary Report
        run: |
          echo "üßæ T·ªïng h·ª£p k·∫øt qu·∫£ qu√©t b·∫£o m·∫≠t" > summary.log
          echo "==============================" >> summary.log

          if grep -q "Secret detected" trivy_output.log; then
            echo "üîê Trivy: ‚ö†Ô∏è C√≥ th·ªÉ ch·ª©a secrets c·∫ßn ki·ªÉm tra th√™m." >> summary.log
          else
            echo "üîê Trivy: ‚úÖ Kh√¥ng ph√°t hi·ªán secrets." >> summary.log
          fi

          if grep -q "FOUND" clamav_output.log; then
            echo "ü¶† ClamAV: ‚ö†Ô∏è Ph√°t hi·ªán m√£ ƒë·ªôc nghi v·∫•n (FOUND)." >> summary.log
          else
            echo "ü¶† ClamAV: ‚úÖ Kh√¥ng ph√°t hi·ªán m√£ ƒë·ªôc." >> summary.log
          fi

          yara_matches=$(grep -v "^üîé " yara_output.log | grep -v "^üß¨" | grep -v "^warning" | grep -v "^$" | wc -l)
          if [ "$yara_matches" -gt 0 ]; then
            echo "üß¨ YARA: ‚ö†Ô∏è C√≥ $yara_matches rule match ‚Äì c·∫ßn ki·ªÉm tra th√™m!" >> summary.log
          else
            echo "üß¨ YARA: ‚úÖ Kh√¥ng ph√°t hi·ªán m·∫´u ƒë·ªôc h·∫°i." >> summary.log
          fi

      ##################################################
      # 5Ô∏è‚É£ Upload to√†n b·ªô log + summary
      ##################################################
      - name: üìé Upload full scan logs + summary
        uses: actions/upload-artifact@v4
        with:
          name: full-scan-logs
          path: |
            trivy_output.log
            clamav_output.log
            yara_output.log
            summary.logname: Full Security Scan (Trivy + ClamAV + YARA)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  Security-full-scan:
    runs-on: ubuntu-latest

    steps:
      - name: üì¶ Checkout source
        uses: actions/checkout@v4

      ##################################################
      # 1Ô∏è‚É£ Trivy ‚Äì Qu√©t secrets v√† m√£ ƒë·ªôc c∆° b·∫£n
      ##################################################
      - name: üõ°Ô∏è Install Trivy
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin

      - name: üîç Trivy Secret Scan (Table format)
        run: |
          echo "üîê Trivy Secret Scan Result" > trivy_output.log
          trivy fs . \
            --scanners secret \
            --exit-code 0 \
            --format table | tee -a trivy_output.log

      ##################################################
      # 2Ô∏è‚É£ ClamAV ‚Äì Qu√©t virus, trojan, worm
      ##################################################
      - name: ü¶† Install ClamAV
        run: |
          sudo apt-get update
          sudo apt-get install -y clamav clamav-daemon

      - name: üîÑ Update ClamAV DB
        run: |
          sudo systemctl stop clamav-freshclam || true
          sudo systemctl stop clamav-daemon || true
          sudo freshclam

      - name: üß™ Run ClamAV Scan
        run: |
          echo "ü¶† ClamAV Scan Result" > clamav_output.log
          clamscan -r --infected --no-summary . | tee -a clamav_output.log || true

      ##################################################
      # 3Ô∏è‚É£ YARA ‚Äì Pattern nh·∫≠n di·ªán malware tinh vi
      ##################################################
      - name: üîß Install YARA
        run: |
          sudo apt-get install -y yara git

      - name: üåê Clone YARA-Rules full repo
        run: |
          git clone https://github.com/Yara-Rules/rules.git yara_rules

      - name: üß¨ Run YARA on all rules (with tagged report)
        run: |
          echo "üß¨ YARA Scan Result" > yara_output.log
          find yara_rules -type f \( -name "*.yar" -o -name "*.yara" \) | while read rule; do
            echo "üîé Scanning with rule: $rule" | tee -a yara_output.log
            yara -r "$rule" . 2>> yara_output.log | tee -a yara_output.log || true
          done

      ##################################################
      # 5Ô∏è‚É£ T·ªïng h·ª£p k·∫øt qu·∫£ (summary.log)
      ##################################################
      - name: üìù Generate Summary Report
        run: |
          echo "üßæ T·ªïng h·ª£p k·∫øt qu·∫£ qu√©t b·∫£o m·∫≠t" > summary.log
          echo "==============================" >> summary.log

          if grep -q "Secret detected" trivy_output.log; then
            echo "üîê Trivy: ‚ö†Ô∏è C√≥ th·ªÉ ch·ª©a secrets c·∫ßn ki·ªÉm tra th√™m." >> summary.log
          else
            echo "üîê Trivy: ‚úÖ Kh√¥ng ph√°t hi·ªán secrets." >> summary.log
          fi

          if grep -q "FOUND" clamav_output.log; then
            echo "ü¶† ClamAV: ‚ö†Ô∏è Ph√°t hi·ªán m√£ ƒë·ªôc nghi v·∫•n (FOUND)." >> summary.log
          else
            echo "ü¶† ClamAV: ‚úÖ Kh√¥ng ph√°t hi·ªán m√£ ƒë·ªôc." >> summary.log
          fi

          yara_matches=$(grep -v "^üîé " yara_output.log | grep -v "^üß¨" | grep -v "^warning" | grep -v "^$" | wc -l)
          if [ "$yara_matches" -gt 0 ]; then
            echo "üß¨ YARA: ‚ö†Ô∏è C√≥ $yara_matches rule match ‚Äì c·∫ßn ki·ªÉm tra th√™m!" >> summary.log
          else
            echo "üß¨ YARA: ‚úÖ Kh√¥ng ph√°t hi·ªán m·∫´u ƒë·ªôc h·∫°i." >> summary.log
          fi

      ##################################################
      # 5Ô∏è‚É£ Upload to√†n b·ªô log + summary
      ##################################################
      - name: üìé Upload full scan logs + summary
        uses: actions/upload-artifact@v4
        with:
          name: full-scan-logs
          path: |
            trivy_output.log
            clamav_output.log
            yara_output.log
            summary.logname: Full Security Scan (Trivy + ClamAV + YARA)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  Security-full-scan:
    runs-on: ubuntu-latest

    steps:
      - name: üì¶ Checkout source
        uses: actions/checkout@v4

      ##################################################
      # 1Ô∏è‚É£ Trivy ‚Äì Qu√©t secrets v√† m√£ ƒë·ªôc c∆° b·∫£n
      ##################################################
      - name: üõ°Ô∏è Install Trivy
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin

      - name: üîç Trivy Secret Scan (Table format)
        run: |
          echo "üîê Trivy Secret Scan Result" > trivy_output.log
          trivy fs . \
            --scanners secret \
            --exit-code 0 \
            --format table | tee -a trivy_output.log

      ##################################################
      # 2Ô∏è‚É£ ClamAV ‚Äì Qu√©t virus, trojan, worm
      ##################################################
      - name: ü¶† Install ClamAV
        run: |
          sudo apt-get update
          sudo apt-get install -y clamav clamav-daemon

      - name: üîÑ Update ClamAV DB
        run: |
          sudo systemctl stop clamav-freshclam || true
          sudo systemctl stop clamav-daemon || true
          sudo freshclam

      - name: üß™ Run ClamAV Scan
        run: |
          echo "ü¶† ClamAV Scan Result" > clamav_output.log
          clamscan -r --infected --no-summary . | tee -a clamav_output.log || true

      ##################################################
      # 3Ô∏è‚É£ YARA ‚Äì Pattern nh·∫≠n di·ªán malware tinh vi
      ##################################################
      - name: üîß Install YARA
        run: |
          sudo apt-get install -y yara git

      - name: üåê Clone YARA-Rules full repo
        run: |
          git clone https://github.com/Yara-Rules/rules.git yara_rules

      - name: üß¨ Run YARA on all rules (with tagged report)
        run: |
          echo "üß¨ YARA Scan Result" > yara_output.log
          find yara_rules -type f \( -name "*.yar" -o -name "*.yara" \) | while read rule; do
            echo "üîé Scanning with rule: $rule" | tee -a yara_output.log
            yara -r "$rule" . 2>> yara_output.log | tee -a yara_output.log || true
          done

      ##################################################
      # 5Ô∏è‚É£ T·ªïng h·ª£p k·∫øt qu·∫£ (summary.log)
      ##################################################
      - name: üìù Generate Summary Report
        run: |
          echo "üßæ T·ªïng h·ª£p k·∫øt qu·∫£ qu√©t b·∫£o m·∫≠t" > summary.log
          echo "==============================" >> summary.log

          if grep -q "Secret detected" trivy_output.log; then
            echo "üîê Trivy: ‚ö†Ô∏è C√≥ th·ªÉ ch·ª©a secrets c·∫ßn ki·ªÉm tra th√™m." >> summary.log
          else
            echo "üîê Trivy: ‚úÖ Kh√¥ng ph√°t hi·ªán secrets." >> summary.log
          fi

          if grep -q "FOUND" clamav_output.log; then
            echo "ü¶† ClamAV: ‚ö†Ô∏è Ph√°t hi·ªán m√£ ƒë·ªôc nghi v·∫•n (FOUND)." >> summary.log
          else
            echo "ü¶† ClamAV: ‚úÖ Kh√¥ng ph√°t hi·ªán m√£ ƒë·ªôc." >> summary.log
          fi

          yara_matches=$(grep -v "^üîé " yara_output.log | grep -v "^üß¨" | grep -v "^warning" | grep -v "^$" | wc -l)
          if [ "$yara_matches" -gt 0 ]; then
            echo "üß¨ YARA: ‚ö†Ô∏è C√≥ $yara_matches rule match ‚Äì c·∫ßn ki·ªÉm tra th√™m!" >> summary.log
          else
            echo "üß¨ YARA: ‚úÖ Kh√¥ng ph√°t hi·ªán m·∫´u ƒë·ªôc h·∫°i." >> summary.log
          fi

      ##################################################
      # 5Ô∏è‚É£ Upload to√†n b·ªô log + summary
      ##################################################
      - name: üìé Upload full scan logs + summary
        uses: actions/upload-artifact@v4
        with:
          name: full-scan-logs
          path: |
            trivy_output.log
            clamav_output.log
            yara_output.log
            summary.logname: Full Security Scan (Trivy + ClamAV + YARA)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  Security-full-scan:
    runs-on: ubuntu-latest

    steps:
      - name: üì¶ Checkout source
        uses: actions/checkout@v4

      ##################################################
      # 1Ô∏è‚É£ Trivy ‚Äì Qu√©t secrets v√† m√£ ƒë·ªôc c∆° b·∫£n
      ##################################################
      - name: üõ°Ô∏è Install Trivy
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin

      - name: üîç Trivy Secret Scan (Table format)
        run: |
          echo "üîê Trivy Secret Scan Result" > trivy_output.log
          trivy fs . \
            --scanners secret \
            --exit-code 0 \
            --format table | tee -a trivy_output.log

      ##################################################
      # 2Ô∏è‚É£ ClamAV ‚Äì Qu√©t virus, trojan, worm
      ##################################################
      - name: ü¶† Install ClamAV
        run: |
          sudo apt-get update
          sudo apt-get install -y clamav clamav-daemon

      - name: üîÑ Update ClamAV DB
        run: |
          sudo systemctl stop clamav-freshclam || true
          sudo systemctl stop clamav-daemon || true
          sudo freshclam

      - name: üß™ Run ClamAV Scan
        run: |
          echo "ü¶† ClamAV Scan Result" > clamav_output.log
          clamscan -r --infected --no-summary . | tee -a clamav_output.log || true

      ##################################################
      # 3Ô∏è‚É£ YARA ‚Äì Pattern nh·∫≠n di·ªán malware tinh vi
      ##################################################
      - name: üîß Install YARA
        run: |
          sudo apt-get install -y yara git

      - name: üåê Clone YARA-Rules full repo
        run: |
          git clone https://github.com/Yara-Rules/rules.git yara_rules

      - name: üß¨ Run YARA on all rules (with tagged report)
        run: |
          echo "üß¨ YARA Scan Result" > yara_output.log
          find yara_rules -type f \( -name "*.yar" -o -name "*.yara" \) | while read rule; do
            echo "üîé Scanning with rule: $rule" | tee -a yara_output.log
            yara -r "$rule" . 2>> yara_output.log | tee -a yara_output.log || true
          done

      ##################################################
      # 5Ô∏è‚É£ T·ªïng h·ª£p k·∫øt qu·∫£ (summary.log)
      ##################################################
      - name: üìù Generate Summary Report
        run: |
          echo "üßæ T·ªïng h·ª£p k·∫øt qu·∫£ qu√©t b·∫£o m·∫≠t" > summary.log
          echo "==============================" >> summary.log

          if grep -q "Secret detected" trivy_output.log; then
            echo "üîê Trivy: ‚ö†Ô∏è C√≥ th·ªÉ ch·ª©a secrets c·∫ßn ki·ªÉm tra th√™m." >> summary.log
          else
            echo "üîê Trivy: ‚úÖ Kh√¥ng ph√°t hi·ªán secrets." >> summary.log
          fi

          if grep -q "FOUND" clamav_output.log; then
            echo "ü¶† ClamAV: ‚ö†Ô∏è Ph√°t hi·ªán m√£ ƒë·ªôc nghi v·∫•n (FOUND)." >> summary.log
          else
            echo "ü¶† ClamAV: ‚úÖ Kh√¥ng ph√°t hi·ªán m√£ ƒë·ªôc." >> summary.log
          fi

          yara_matches=$(grep -v "^üîé " yara_output.log | grep -v "^üß¨" | grep -v "^warning" | grep -v "^$" | wc -l)
          if [ "$yara_matches" -gt 0 ]; then
            echo "üß¨ YARA: ‚ö†Ô∏è C√≥ $yara_matches rule match ‚Äì c·∫ßn ki·ªÉm tra th√™m!" >> summary.log
          else
            echo "üß¨ YARA: ‚úÖ Kh√¥ng ph√°t hi·ªán m·∫´u ƒë·ªôc h·∫°i." >> summary.log
          fi

      ##################################################
      # 5Ô∏è‚É£ Upload to√†n b·ªô log + summary
      ##################################################
      - name: üìé Upload full scan logs + summary
        uses: actions/upload-artifact@v4
        with:
          name: full-scan-logs
          path: |
            trivy_output.log
            clamav_output.log
            yara_output.log
            summary.log
